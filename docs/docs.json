{
    "functions": [
        {
            "name": "restrict",
            "access": "",
            "virtual": false,
            "description": "<p>Prevent users who aren't logged-in from accessing routes.\nUse <code>loginRoute</code> for redirection. Function also remembers the requested url\nand user is redirected after successful login. If <code>rest</code> is enabled\nyou'll get a <code>401</code> response.</p>",
            "parameters": [
                {
                    "name": "config",
                    "type": "Object",
                    "description": "<p>Configuration object</p>",
                    "default": "",
                    "optional": true,
                    "nullable": ""
                },
                {
                    "name": "config.loginRoute",
                    "type": "String",
                    "description": "<p>Route that handles the login process</p>",
                    "default": "'/login'",
                    "optional": true,
                    "nullable": ""
                }
            ],
            "examples": [
                "<caption>config.js</caption>\r\n  exports.loginRoute = '/login';",
                "<caption>app.js</caption>\r\n  var config = require('./config.js');\r\n  app.get('/private', util.restrict(config), function(req, res) {\r\n    res.send('only a logged in user can see this');\r\n  })"
            ],
            "lineno": 24
        },
        {
            "name": "getDatabase",
            "access": "",
            "virtual": false,
            "description": "<p>Get type of database and database adapter name from connection information.</p>",
            "parameters": [
                {
                    "name": "config",
                    "type": "Object",
                    "description": "<p>Configuration object</p>",
                    "default": "",
                    "optional": "",
                    "nullable": ""
                },
                {
                    "name": "config.db",
                    "type": [
                        "String",
                        "Object"
                    ],
                    "description": "<p>Database connection string / object</p>",
                    "default": "",
                    "optional": "",
                    "nullable": ""
                }
            ],
            "examples": [
                "<caption>config.js (CouchDB)</caption>\r\n  exports.db = 'http://127.0.0.1:5984/';",
                "<caption>config.js (all other DBs)</caption>\r\n  exports.db = {\r\n    url: 'postgres://127.0.0.1:5432/',\r\n    name: 'users',\r\n    collection: 'my_user_table'\r\n  }",
                "<caption>app.js</caption>\r\n  var config = require('./config.js');\r\n  var db = util.getDatabase(config);\r\n  // {\r\n  //   type: 'couchdb',\r\n  //   adapter: 'lockit-couchdb-adapter'\r\n  // }"
            ],
            "lineno": 63,
            "returns": {
                "type": "Object",
                "description": "<p>Object containing database <code>type</code> and <code>adapter</code></p>"
            }
        },
        {
            "name": "qr",
            "access": "",
            "virtual": false,
            "description": "<p>Generate link to QR code,  uses <a href=\"https://developers.google.com/chart/infographics/docs/qr_codes\">Google Charts</a>.</p>",
            "parameters": [
                {
                    "name": "config",
                    "type": "Object",
                    "description": "<p>Configuration object</p>",
                    "default": "",
                    "optional": "",
                    "nullable": ""
                },
                {
                    "name": "config.key",
                    "type": "String",
                    "description": "<p>Individual random key for user</p>",
                    "default": "",
                    "optional": "",
                    "nullable": ""
                },
                {
                    "name": "config.email",
                    "type": "String",
                    "description": "<p>User email for Google Authenticator app</p>",
                    "default": "",
                    "optional": "",
                    "nullable": ""
                },
                {
                    "name": "config.issuer",
                    "type": "String",
                    "description": "<p>Issuer for Google Authenticator</p>",
                    "default": "'Lockit'",
                    "optional": true,
                    "nullable": ""
                }
            ],
            "examples": [
                "var config = {\r\n  key: 'abcd1234',\r\n  email: 'mirco.zeiss@gmail.com'\r\n};\r\nvar link = util.qr(config);\r\n// https://chart.googleapis.com/chart?chs=200x200&cht=qr&chl=otpauth%3A%2F%2Ftotp%2FLockit%3Amirco.zeiss%40gmail.com%3Fsecret%3DMFRGGZBRGI2DI%3D%3D%3D%26issuer%3DLockit"
            ],
            "lineno": 118,
            "returns": {
                "type": "String",
                "description": "<p>URL for QR code</p>"
            }
        },
        {
            "name": "verify",
            "access": "",
            "virtual": false,
            "description": "<p>Verify a two-factor authentication token, uses <a href=\"http://en.wikipedia.org/wiki/Time-based_One-time_Password_Algorithm\">time-based one-time password algorithm (totp)</a>.\nTo be used with <a href=\"https://support.google.com/accounts/answer/1066447?hl=en\">Google Authenticator</a>.</p>",
            "parameters": [
                {
                    "name": "token",
                    "type": "String",
                    "description": "<p>The two-factor token to verify</p>",
                    "default": "",
                    "optional": "",
                    "nullable": ""
                },
                {
                    "name": "key",
                    "type": "String",
                    "description": "<p>The individual key for the user</p>",
                    "default": "",
                    "optional": "",
                    "nullable": ""
                },
                {
                    "name": "options",
                    "type": "Object",
                    "description": "<p>Options object for\n  <a href=\"https://github.com/guyht/notp#totpverifytoken-key-opt\">notp#totp.verify</a></p>",
                    "default": "",
                    "optional": true,
                    "nullable": ""
                },
                {
                    "name": "options.window",
                    "type": "String",
                    "description": "<p>Allowable margin for counter</p>",
                    "default": "6",
                    "optional": true,
                    "nullable": ""
                },
                {
                    "name": "options.time",
                    "type": "Number",
                    "description": "<p>Time step of counter in seconds</p>",
                    "default": "30",
                    "optional": true,
                    "nullable": ""
                }
            ],
            "examples": [
                "var key = 'abcd1234';\r\nvar token = '236709';\r\nvar valid = util.verify(token, key);\r\nif (valid) {\r\n  // continue here\r\n}"
            ],
            "lineno": 153,
            "returns": {
                "type": "Boolean",
                "description": "<p><code>true</code> if token is valid</p>"
            }
        },
        {
            "name": "destroy",
            "access": "",
            "virtual": false,
            "description": "<p>Destroy the current session. Works with cookie sessions and session stores.</p>",
            "parameters": [
                {
                    "name": "req",
                    "type": "Object",
                    "description": "<p>The default Express request object</p>",
                    "default": "",
                    "optional": "",
                    "nullable": ""
                },
                {
                    "name": "done",
                    "type": "function",
                    "description": "<p>Function executed when session is destroyed</p>",
                    "default": "",
                    "optional": "",
                    "nullable": ""
                }
            ],
            "examples": [
                "util.destroy(req, function() {\r\n  // user is now logged out\r\n});"
            ],
            "lineno": 173
        }
    ]
}
